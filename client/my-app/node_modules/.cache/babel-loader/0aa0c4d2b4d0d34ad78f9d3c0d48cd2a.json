{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gunnu singh\\\\Downloads\\\\Second-hand-store-main\\\\Second-hand-store-main\\\\client\\\\my-app\\\\src\\\\pages\\\\NewItem\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Paper, Grid, Avatar, Container, Typography, Button, TextField } from \"@material-ui/core\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { createPostItem, getItemDetails, updateItem } from \"../../api/index\";\nimport { useState, useEffect } from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport makeStyles from \"../Auth/styles\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: \"\",\n  category: \"\",\n  description: \"\",\n  pictureAddress: \"\",\n  price: 0\n};\n\nconst CreatePost = () => {\n  _s();\n\n  const history = useNavigate();\n  const classes = makeStyles();\n  const {\n    itemId\n  } = useParams();\n  const category = [\"Electricy\", \"Pets\", \"Cars\", \"Furniture\", \"Clothing\", \"Other\"];\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [inputData, setInputData] = useState(initialState);\n  useEffect(async () => {\n    setInputData(initialState);\n\n    if (itemId) {\n      try {\n        const {\n          data\n        } = await getItemDetails(itemId);\n        const {\n          name,\n          category,\n          description,\n          pictureAddress,\n          price\n        } = data;\n        setInputData({\n          name,\n          category,\n          description,\n          pictureAddress,\n          price\n        });\n      } catch (error) {\n        setErrorMessage(error === null || error === void 0 ? void 0 : error.response.data.message);\n      }\n    }\n  }, [itemId]);\n\n  const handleUpdate = async () => {};\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      var _JSON$parse;\n\n      console.log(inputData);\n      const userDetails = (_JSON$parse = JSON.parse(localStorage.getItem(\"token\"))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.userDetails;\n      console.log(inputData);\n      itemId ? await updateItem(itemId, { ...inputData,\n        sellerId: userDetails === null || userDetails === void 0 ? void 0 : userDetails.id,\n        seller: userDetails === null || userDetails === void 0 ? void 0 : userDetails.name\n      }) : await createPostItem({ ...inputData,\n        sellerId: userDetails === null || userDetails === void 0 ? void 0 : userDetails.id,\n        seller: userDetails === null || userDetails === void 0 ? void 0 : userDetails.name\n      });\n      setInputData(initialState);\n      history(\"/home\");\n    } catch (error) {\n      setErrorMessage((error === null || error === void 0 ? void 0 : error.response.data.message) || (error === null || error === void 0 ? void 0 : error.response.data[Object.keys(error.response.data)[0]].message));\n    }\n  };\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setInputData(inputData => ({ ...inputData,\n      [target.name]: target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar2,\n        children: itemId ? /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: itemId ? `Edit` : `Create Post Sell`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.error,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          autoComplete: \"off\",\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              fullWidth: true,\n              value: inputData.name,\n              name: \"name\",\n              label: \"Name\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"standard\",\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: inputData.category,\n                label: \"Category\",\n                name: \"category\",\n                onChange: handleChange,\n                children: category.map((type, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: `${type}`,\n                  children: type\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              value: inputData.description,\n              fullWidth: true,\n              multiline: true,\n              variant: \"outlined\",\n              rows: 4,\n              name: \"description\",\n              label: \"Description\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              fullWidth: true,\n              value: inputData.pictureAddress,\n              type: \"url\",\n              name: \"pictureAddress\",\n              label: \"Picture addresss\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              fullWidth: true,\n              value: inputData.price,\n              InputProps: {\n                inputProps: {\n                  min: 0,\n                  max: 99999\n                }\n              },\n              type: \"number\",\n              autoComplete: \"off\",\n              name: \"price\",\n              label: \"Price\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"submit\",\n              variant: \"contained\",\n              fullWidth: true,\n              children: itemId ? \"Edit\" : \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePost, \"YLOBGLo5EInt6uvwh5TKPxOS6sw=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["C:/Users/gunnu singh/Downloads/Second-hand-store-main/Second-hand-store-main/client/my-app/src/pages/NewItem/CreatePost.js"],"names":["React","Paper","Grid","Avatar","Container","Typography","Button","TextField","AddIcon","createPostItem","getItemDetails","updateItem","useState","useEffect","InputLabel","MenuItem","FormControl","Select","EditIcon","makeStyles","useNavigate","useParams","initialState","name","category","description","pictureAddress","price","CreatePost","history","classes","itemId","errorMessage","setErrorMessage","inputData","setInputData","data","error","response","message","handleUpdate","handleSubmit","e","preventDefault","console","log","userDetails","JSON","parse","localStorage","getItem","sellerId","id","seller","Object","keys","handleChange","target","value","paper","avatar2","map","type","index","inputProps","min","max"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Avatar,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { createPostItem, getItemDetails, updateItem } from \"../../api/index\";\r\nimport { useState, useEffect } from \"react\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport makeStyles from \"../Auth/styles\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  category: \"\",\r\n  description: \"\",\r\n  pictureAddress: \"\",\r\n  price: 0,\r\n};\r\nconst CreatePost = () => {\r\n  const history = useNavigate();\r\n  const classes = makeStyles();\r\n  const { itemId } = useParams();\r\n  const category = [\r\n    \"Electricy\",\r\n    \"Pets\",\r\n    \"Cars\",\r\n    \"Furniture\",\r\n    \"Clothing\",\r\n    \"Other\",\r\n  ];\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [inputData, setInputData] = useState(initialState);\r\n  useEffect(async () => {\r\n    setInputData(initialState);\r\n    if (itemId) {\r\n      try {\r\n        const { data } = await getItemDetails(itemId);\r\n        const { name, category, description, pictureAddress, price } = data;\r\n        setInputData({ name, category, description, pictureAddress, price });\r\n      } catch (error) {\r\n        setErrorMessage(error?.response.data.message);\r\n      }\r\n    }\r\n  }, [itemId]);\r\n  const handleUpdate = async () => {};\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      console.log(inputData);\r\n      const userDetails = JSON.parse(\r\n        localStorage.getItem(\"token\")\r\n      )?.userDetails;\r\n      console.log(inputData);\r\n      itemId\r\n        ? await updateItem(itemId, {\r\n            ...inputData,\r\n            sellerId: userDetails?.id,\r\n            seller: userDetails?.name,\r\n          })\r\n        : await createPostItem({\r\n            ...inputData,\r\n            sellerId: userDetails?.id,\r\n            seller: userDetails?.name,\r\n          });\r\n      setInputData(initialState);\r\n      history(\"/home\");\r\n    } catch (error) {\r\n      setErrorMessage(\r\n        error?.response.data.message ||\r\n          error?.response.data[Object.keys(error.response.data)[0]].message\r\n      );\r\n    }\r\n  };\r\n  const handleChange = ({ target }) => {\r\n    setInputData((inputData) => ({\r\n      ...inputData,\r\n      [target.name]: target.value,\r\n    }));\r\n  };\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar2}>\r\n          {itemId ? <EditIcon /> : <AddIcon />}\r\n        </Avatar>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          {itemId ? `Edit` : `Create Post Sell`}\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.error}>\r\n          {errorMessage}\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid autoComplete=\"off\" container spacing={2}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                value={inputData.name}\r\n                name=\"name\"\r\n                label=\"Name\"\r\n                onChange={handleChange}\r\n              ></TextField>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <FormControl variant=\"standard\" fullWidth>\r\n                <InputLabel>Category</InputLabel>\r\n                <Select\r\n                  value={inputData.category}\r\n                  label=\"Category\"\r\n                  name=\"category\"\r\n                  onChange={handleChange}\r\n                >\r\n                  {category.map((type, index) => (\r\n                    <MenuItem key={index} value={`${type}`}>\r\n                      {type}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                required\r\n                value={inputData.description}\r\n                fullWidth\r\n                multiline\r\n                variant=\"outlined\"\r\n                rows={4}\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                onChange={handleChange}\r\n              ></TextField>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                value={inputData.pictureAddress}\r\n                type=\"url\"\r\n                name=\"pictureAddress\"\r\n                label=\"Picture addresss\"\r\n                onChange={handleChange}\r\n              ></TextField>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                value={inputData.price}\r\n                InputProps={{ inputProps: { min: 0, max: 99999 } }}\r\n                type=\"number\"\r\n                autoComplete=\"off\"\r\n                name=\"price\"\r\n                label=\"Price\"\r\n                onChange={handleChange}\r\n              ></TextField>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <Button\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                fullWidth\r\n              >\r\n                {itemId ? \"Edit\" : \"Post\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n"]},"metadata":{},"sourceType":"module"}