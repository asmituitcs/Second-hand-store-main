{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASMIT\\\\Downloads\\\\Second-hand-store-main\\\\Second-hand-store-main\\\\client\\\\my-app\\\\src\\\\pages\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Paper, Grid, Avatar, Container, Typography, Button } from \"@material-ui/core\";\nimport LockOutLinedIcon from \"@material-ui/icons/LockOutlined\";\nimport makeStyles from \"./styles\";\nimport Input from \"./Input\";\nimport { register, login } from \"../../api/index\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { loginUser, logout } from \"../../redux/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const classes = makeStyles();\n  const [inputData, setInputData] = useState({\n    fullName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [hidePassword, setHidePassword] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [isRegister, setIsRegister] = useState(false);\n\n  const handleTogglePassword = () => {\n    setHidePassword(hidePassword => !hidePassword);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (isRegister) {\n        await register(inputData);\n        setIsRegister(isRegister => !isRegister);\n        setErrorMessage(null);\n      } else {\n        dispatch(logout());\n        const {\n          data\n        } = await login(inputData);\n        dispatch(loginUser(data));\n        console.log(localStorage.getItem(\"token\"));\n        console.log(data);\n        setErrorMessage(null);\n        navigate(\"/home\");\n      }\n    } catch (error) {\n      console.log(error === null || error === void 0 ? void 0 : error.response.data);\n      setErrorMessage(error.response.data.message || (error === null || error === void 0 ? void 0 : error.response.data[Object.keys(error.response.data)[0]].message));\n    }\n  };\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setInputData(inputData => ({ ...inputData,\n      [target.name]: target.value\n    }));\n  };\n\n  const switchForm = () => {\n    setIsRegister(isRegister => !isRegister);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutLinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: isRegister ? \"Register\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.error,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isRegister && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"fullName\",\n            label: \"Full Name\",\n            type: \"text\",\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email\",\n            type: \"email\",\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            type: hidePassword ? \"password\" : \"text\",\n            handleChange: handleChange,\n            handleTogglePassword: handleTogglePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), isRegister && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Confirm Password\",\n            type: hidePassword ? \"password\" : \"text\",\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.submit,\n            type: \"submit\",\n            variant: \"contained\",\n            fullWidth: true,\n            children: isRegister ? \"Register\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            onClick: switchForm,\n            children: isRegister ? \"Already have an account? login\" : \"Create a new Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"CQDP0c/Y4HAB/zxkvGwD8EJmRQo=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/ASMIT/Downloads/Second-hand-store-main/Second-hand-store-main/client/my-app/src/pages/Auth/AuthForm.js"],"names":["React","Paper","Grid","Avatar","Container","Typography","Button","LockOutLinedIcon","makeStyles","Input","register","login","useState","useNavigate","useDispatch","loginUser","logout","AuthForm","navigate","dispatch","classes","inputData","setInputData","fullName","email","password","confirmPassword","hidePassword","setHidePassword","errorMessage","setErrorMessage","isRegister","setIsRegister","handleTogglePassword","handleSubmit","e","preventDefault","data","console","log","localStorage","getItem","error","response","message","Object","keys","handleChange","target","name","value","switchForm","paper","avatar","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Avatar,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport LockOutLinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport makeStyles from \"./styles\";\r\nimport Input from \"./Input\";\r\nimport { register, login } from \"../../api/index\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginUser, logout } from \"../../redux/user\";\r\n\r\nconst AuthForm = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const classes = makeStyles();\r\n  const [inputData, setInputData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [hidePassword, setHidePassword] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [isRegister, setIsRegister] = useState(false);\r\n  const handleTogglePassword = () => {\r\n    setHidePassword((hidePassword) => !hidePassword);\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (isRegister) {\r\n        await register(inputData);\r\n        setIsRegister((isRegister) => !isRegister);\r\n        setErrorMessage(null);\r\n      } else {\r\n        dispatch(logout());\r\n        const { data } = await login(inputData);\r\n        dispatch(loginUser(data));\r\n        console.log(localStorage.getItem(\"token\"));\r\n        console.log(data);\r\n        setErrorMessage(null);\r\n        navigate(\"/home\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error?.response.data);\r\n      setErrorMessage(\r\n        error.response.data.message ||\r\n          error?.response.data[Object.keys(error.response.data)[0]].message\r\n      );\r\n    }\r\n  };\r\n  const handleChange = ({ target }) => {\r\n    setInputData((inputData) => ({\r\n      ...inputData,\r\n      [target.name]: target.value,\r\n    }));\r\n  };\r\n  const switchForm = () => {\r\n    setIsRegister((isRegister) => !isRegister);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutLinedIcon></LockOutLinedIcon>\r\n        </Avatar>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          {isRegister ? \"Register\" : \"Login\"}\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.error}>\r\n          {errorMessage}\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            {isRegister && (\r\n              <Input\r\n                name=\"fullName\"\r\n                label=\"Full Name\"\r\n                type=\"text\"\r\n                handleChange={handleChange}\r\n              />\r\n            )}\r\n            <Input\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              handleChange={handleChange}\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type={hidePassword ? \"password\" : \"text\"}\r\n              handleChange={handleChange}\r\n              handleTogglePassword={handleTogglePassword}\r\n            />\r\n            {isRegister && (\r\n              <Input\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type={hidePassword ? \"password\" : \"text\"}\r\n                handleChange={handleChange}\r\n              />\r\n            )}\r\n            <Button\r\n              className={classes.submit}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n            >\r\n              {isRegister ? \"Register\" : \"Login\"}\r\n            </Button>\r\n            <Button fullWidth onClick={switchForm}>\r\n              {isRegister\r\n                ? \"Already have an account? login\"\r\n                : \"Create a new Account\"}\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}